#!/bin/bash
### PBS is valid on JADE
#jade -N zplotmonitor
#jade -l select=1:ncpus=40:mpiprocs=40
#jade -l walltime=05:00:00
#jade -l cluster=hpt
#jade -M Jean-Marc.Molines@univ-grenoble-alpes.fr
#jade -mb -me
#jade -v NB_NODES=1

#vayu -N zplotmonitor
#vayu -l select=1:ncpus=40:mpiprocs=40
#vayu -l walltime=05:00:00
#vayu -l cluster=hpt
#vayu -M Jean-Marc.Molines@univ-grenoble-alpes.fr
#vayu -mb -me
#vayu -v NB_NODES=1

#SBATCH --nodes=1
#SBATCH --ntasks=33
#SBATCH --ntasks-per-node=40
#SBATCH --threads-per-core=1
#SBATCH -A cli@cpu
#SBATCH -J zmetamon
#SBATCH -e zmetamon.e%j
#SBATCH -o zmetamon.o%j
#SBATCH --time=05:00:00
#SBATCH --exclusive


### LoadLeveler on ULAM and VARGAS
## title of the run
# @ job_name = zplotmonitor
## Output listing location
# @ output = $(job_name).$(jobid)
# @ error  = $(output)
# @ job_type = parallel
# specifique Adapp
# @ requirements = (Feature == "prepost")
# @ total_tasks = 33
# @ wall_clock_limit = 05:00:00
# @ as_limit = 3.2gb
# @ queue

### SLURM is valid on CURIE
#MSUB -r zplotmonitor
#MSUB -n   33              # Number of tasks to run            
#MSUB -N   1              # Number of nodes to use          
#MSUB -q standard
#MSUB -o zplotmonitor.%I
#MSUB -e zplotmonitor.%I
#MSUB -T 05:00:00
#MSUB -A cli@cpu

set -x
RNDTMPDIR=0

if [ $RNDTMPDIR == 1 ] ; then

cp ./config_def         $TMPDIR
cp ./function_def       $TMPDIR

cd $TMPDIR

. ./config_def
. ./function_def

cp -rf $PLOTTOOLS/PALDIR              $TMPDIR
cp     $PLOTTOOLS/plot_monitor    $TMPDIR

if [ $useMPI == 1 ] ; then cp $MPITOOLS/mpi_plot_monitor $TMPDIR ; fi

else

TMPDIR=$WORKDIR/GKSTMPDIR
mkdir -p $TMPDIR

cd /gpfsscratch/rech/cli/rcli002/TMPDIR_PLT_eORCA12.L75-GJM2020

. ./config_def
. ./function_def

fi

# set the list of years you want to monitor 'at once'  
yinit=1980
yend=2012
single=$( echo $yinit | awk '{ print index($1,"-") }' )


if [ $single = 0 ] ; then
  YEARS=$( seq $yinit $yend )
else
  YEARS=$yinit
fi

  
if [ $useMPI = 1 ] ; then
# MPI execution

  case $MACHINE in 
  ( jade )
    # mpi_plot_monitor $YEARS 
    #  Then each proc is expecting a command such as plot_monitor  $year
    if [ $single = 0 ] ; then
       mpiexec_mpt -n 33 ./mpi_plot_monitor $YEARS
    else
      ./plot_monitor $YEARS
    fi   ;;

  ( occigen | occigen2 | jean-zay)
    # mpi_plot_monitor $YEARS 
    #  Then each proc is expecting a command such as plot_monitor  $year
    if [ $single = 0 ] ; then
       srun --mpi=pmi2  -n 33 ./mpi_plot_monitor $YEARS
    else
      ./plot_monitor $YEARS
    fi   ;;


  ( vayu )
    # mpi_plot_monitor $YEARS
    #  Then each proc is expecting a command such as plot_monitor  $year
    if [ $single = 0 ] ; then
    mpirun  -n 33 ./mpi_plot_monitor $YEARS
    fi   ;;

  ( ada )
    if [ $single = 0 ] ; then
       poe ./mpi_plot_monitor $YEARS 
    else
      ./plot_monitor $YEARS
    fi   ;;

  ( ulam )
    ./mpi_plot_monitor $YEARS  ;;

  ( curie )
    if [ $single = 0 ] ; then
       ccc_mprun -E '-m cyclic ' -n 33  ./mpi_plot_monitor $YEARS 
    else
      ./plot_monitor $YEARS
    fi   ;;


  ( * )
    echo No support for machine $MACHINE ;;
   esac

else

### this allows to ensure compatibility for most of the tags
  if [ ${#yinit} -gt 4 ] ; then
     # interannual plot
     ./plot_monitor $yinit
  elif [ ${#yinit} -gt 4 ] ; then
     # standard modern year
     ./plot_monitor $yinit
  else
     # climato runs
     yinit=$( printf "%04d" $yinit ) 
     ./plot_monitor $yinit
  fi

fi
